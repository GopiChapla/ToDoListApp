{"ast":null,"code":"var _jsxFileName = \"/home/hp/Documents/React/todolist2/src/Pinlist.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pinlist = () => {\n  _s();\n\n  const [tododata, setTododata] = useState();\n  const list = localStorage.getItem(\"todolist\");\n  const listdata = JSON.parse(list);\n  seEffect(() => {\n    setTododata(listdata);\n    console.log(tododata);\n  }, []);\n  useEffect(() => {\n    console.log(tododata);\n  }, [tododata]);\n  const data = [];\n\n  if (tododata) {\n    tododata.forEach((item, index) => {\n      data.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: item.ispin && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          style: {\n            backgroundColor: \"greenyellow\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: \"left\"\n            },\n            children: [item.status ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => {\n                donetask(e, index);\n              },\n              checked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => {\n                donetask(e, index);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 23\n            }, this), \"\\xA0\", item.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 127\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => pindata(index),\n              children: \"\\uD83D\\uDCCC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deletedata(index),\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updatedata(index),\n              children: \"\\u270E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 40\n        }, this)\n      }, void 0, false));\n    });\n  }\n\n  const donetask = (e, index) => {\n    if (e.target.checked) {\n      listdata[index].status = true;\n      setTododata(listdata);\n      document.getElementById(\"msg\").innerHTML = \"Task Completed\";\n      document.getElementById(\"liveToast\").style.display = \"block\";\n    } else {\n      listdata[index].status = false;\n      setTododata(listdata);\n      document.getElementById(\"msg\").innerHTML = \"Task not Completed\";\n      document.getElementById(\"liveToast\").style.display = \"block\";\n    }\n\n    localStorage.setItem(\"todolist\", JSON.stringify(listdata));\n  };\n\n  const pindata = index => {\n    let pin = parseInt(localStorage.getItem(\"pin\"));\n    pin = pin - 1;\n    localStorage.setItem(\"pin\", JSON.stringify(pin));\n    listdata[index].ispin = false;\n    setTododata(listdata);\n    localStorage.setItem(\"todolist\", JSON.stringify(listdata));\n    document.getElementById(\"msg\").innerHTML = \"Successfully UnPined\";\n    document.getElementById(\"liveToast\").style.display = \"block\";\n  };\n\n  const updatedata = index => {\n    const btndata = document.getElementById(\"btnadd\");\n    document.getElementById(\"txtitem\").value = listdata[index].title;\n    btndata.innerHTML = \"Update\";\n    btndata.value = index;\n  };\n\n  const deletedata = index => {\n    let pin = parseInt(localStorage.getItem(\"pin\"));\n    pin = pin - 1;\n    localStorage.setItem(\"pin\", JSON.stringify(pin));\n    listdata.splice(index, 1);\n    setTododata(listdata);\n    localStorage.setItem(\"todolist\", JSON.stringify(listdata));\n    document.getElementById(\"msg\").innerHTML = \"Successfully Deleted\";\n    document.getElementById(\"liveToast\").style.display = \"block\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        \"width\": \"30rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pinlist, \"DJz0QYd7cJnUJHAO7HKJcVMUnJU=\");\n\n_c = Pinlist;\nexport default Pinlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pinlist\");","map":{"version":3,"names":["Pinlist","tododata","setTododata","useState","list","localStorage","getItem","listdata","JSON","parse","seEffect","console","log","useEffect","data","forEach","item","index","push","ispin","backgroundColor","float","status","e","donetask","title","pindata","deletedata","updatedata","target","checked","document","getElementById","innerHTML","style","display","setItem","stringify","pin","parseInt","btndata","value","splice"],"sources":["/home/hp/Documents/React/todolist2/src/Pinlist.js"],"sourcesContent":["\n\nconst Pinlist = () => {\n\n    const[tododata, setTododata] = useState()\n    const list = localStorage.getItem(\"todolist\")\n    const listdata = JSON.parse(list)\n\n    seEffect(() => {\n        setTododata(listdata)\n        console.log(tododata)\n    }, [])\n    useEffect(() => {\n        console.log(tododata)\n\n    }, [tododata])\n\n    const data = [];\n    if (tododata) {\n        tododata.forEach((item, index) => {\n            data.push(<>{item.ispin && <li className=\"list-group-item\" key={index} style={{ backgroundColor: \"greenyellow\" }}><div style={{ float: \"left\" }}>\n                {item.status ? <input type=\"checkbox\" onChange={(e) => { donetask(e, index) }} checked />\n                    : <input type=\"checkbox\" onChange={(e) => { donetask(e, index) }} />}\n\n                &nbsp;{item.title}</div>\n                <div style={{ float: \"right\" }}>\n                    <button onClick={() => pindata(index)}  >&#x1F4CC;</button>&nbsp;\n                    <br /><br />\n                    <button onClick={() => deletedata(index)}  >&#10060;</button>&nbsp;\n                    <button onClick={() => updatedata(index)}  >&#9998;</button></div></li>}</>)\n        });\n    }\n\n    const donetask = (e, index) => {\n        if (e.target.checked) {\n            listdata[index].status = true\n            setTododata(listdata)\n            document.getElementById(\"msg\").innerHTML = \"Task Completed\"\n            document.getElementById(\"liveToast\").style.display = \"block\"\n        }\n        else {\n            listdata[index].status = false\n            setTododata(listdata)\n            document.getElementById(\"msg\").innerHTML = \"Task not Completed\"\n            document.getElementById(\"liveToast\").style.display = \"block\"\n        }\n        localStorage.setItem(\"todolist\", JSON.stringify(listdata))\n\n    }\n\n    const pindata = (index) => {\n        let pin = parseInt(localStorage.getItem(\"pin\"))\n        pin = pin - 1\n        localStorage.setItem(\"pin\", JSON.stringify(pin))\n        listdata[index].ispin = false\n        setTododata(listdata)\n        localStorage.setItem(\"todolist\", JSON.stringify(listdata))\n        document.getElementById(\"msg\").innerHTML = \"Successfully UnPined\"\n        document.getElementById(\"liveToast\").style.display = \"block\"\n    }\n\n    const updatedata = (index) => {\n        const btndata = document.getElementById(\"btnadd\")\n        document.getElementById(\"txtitem\").value = listdata[index].title\n        btndata.innerHTML = \"Update\"\n        btndata.value = index\n    }\n\n    const deletedata = (index) => {\n        let pin = parseInt(localStorage.getItem(\"pin\"))\n        pin = pin - 1\n        localStorage.setItem(\"pin\", JSON.stringify(pin))\n        listdata.splice(index, 1)\n        setTododata(listdata)\n        localStorage.setItem(\"todolist\", JSON.stringify(listdata))\n        document.getElementById(\"msg\").innerHTML = \"Successfully Deleted\";\n        document.getElementById(\"liveToast\").style.display = \"block\"\n    }\n\n\n    return (\n        <>\n\n            <div className=\"card\" style={{ \"width\": \"30rem\" }}>\n                <ul className=\"list-group list-group-flush\">\n                    {data}\n                </ul>\n            </div>\n\n        </>\n    )\n}\n\nexport default Pinlist"],"mappings":"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"},"metadata":{},"sourceType":"module"}